apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: e9cbce43df740a5b82657e8f23ea886cc4e0fde500bb4a643bc073c9d9a1add1
    cni.projectcalico.org/podIP: 10.2.2.11/32
    cni.projectcalico.org/podIPs: 10.2.2.11/32
    reload: YSqITtaA
  creationTimestamp: "2023-08-11T09:10:30Z"
  generateName: kubedb-kubedb-webhook-server-fcb9d654f-
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/name: kubedb-webhook-server
    pod-template-hash: fcb9d654f
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:reload: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"fb047e2b-267e-4522-9e0d-d32220d7e629"}: {}
      f:spec:
        f:containers:
          k:{"name":"operator"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:securityContext: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"tmpdir"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-08-11T09:10:30Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:cni.projectcalico.org/containerID: {}
          f:cni.projectcalico.org/podIP: {}
          f:cni.projectcalico.org/podIPs: {}
    manager: calico
    operation: Update
    subresource: status
    time: "2023-08-11T09:10:31Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.2.2.11"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-08-11T09:10:32Z"
  name: kubedb-kubedb-webhook-server-fcb9d654f-r72g4
  namespace: kubedb
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kubedb-kubedb-webhook-server-fcb9d654f
    uid: fb047e2b-267e-4522-9e0d-d32220d7e629
  resourceVersion: "8126"
  uid: 55bc497c-128b-4303-9587-c98321710746
spec:
  containers:
  - args:
    - run
    - --v=3
    - --secure-port=8443
    - --audit-log-path=-
    - --tls-cert-file=/var/serving-cert/tls.crt
    - --tls-private-key-file=/var/serving-cert/tls.key
    - --enable-mutating-webhook=true
    - --enable-validating-webhook=true
    - --use-kubeapiserver-fqdn-for-aks=true
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: ghcr.io/kubedb/kubedb-webhook-server:v0.10.0-rc.0
    imagePullPolicy: IfNotPresent
    name: operator
    ports:
    - containerPort: 8443
      name: operator
      protocol: TCP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp
      name: tmpdir
    - mountPath: /var/serving-cert
      name: serving-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-22spf
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: lke124212-183842-64d5ea637f43
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kubedb-kubedb-webhook-server
  serviceAccountName: kubedb-kubedb-webhook-server
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: tmpdir
  - name: serving-cert
    secret:
      defaultMode: 420
      secretName: kubedb-kubedb-webhook-server-apiserver-cert
  - name: kube-api-access-22spf
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T09:10:30Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T09:10:32Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T09:10:32Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T09:10:30Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://62fdc83097304315e96d7cf03503ea382edd75fedc945d0930c6a994ac0a80a5
    image: ghcr.io/kubedb/kubedb-webhook-server:v0.10.0-rc.0
    imageID: ghcr.io/kubedb/kubedb-webhook-server@sha256:f98709c5d031dc0d0df463d146e24e2579f290f6f5cdbb70860f11c71dde198d
    lastState: {}
    name: operator
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T09:10:31Z"
  hostIP: 192.168.193.108
  phase: Running
  podIP: 10.2.2.11
  podIPs:
  - ip: 10.2.2.11
  qosClass: BestEffort
  startTime: "2023-08-11T09:10:30Z"
