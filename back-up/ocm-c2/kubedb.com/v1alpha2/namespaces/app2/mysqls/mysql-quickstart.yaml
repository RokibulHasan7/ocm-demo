apiVersion: kubedb.com/v1alpha2
kind: MySQL
metadata:
  creationTimestamp: "2023-08-11T09:15:01Z"
  finalizers:
  - kubedb.com
  generation: 42
  managedFields:
  - apiVersion: kubedb.com/v1alpha2
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:ownerReferences:
          .: {}
          k:{"uid":"f2170e66-e9a4-4109-aae8-1347a9f4ed73"}: {}
      f:spec:
        .: {}
        f:allowedReadReplicas:
          .: {}
          f:namespaces:
            .: {}
            f:from: {}
        f:allowedSchemas:
          .: {}
          f:namespaces:
            .: {}
            f:from: {}
        f:healthChecker:
          .: {}
          f:failureThreshold: {}
          f:periodSeconds: {}
          f:timeoutSeconds: {}
        f:storage:
          .: {}
          f:accessModes: {}
          f:resources:
            .: {}
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
        f:storageType: {}
        f:terminationPolicy: {}
        f:useAddressType: {}
        f:version: {}
    manager: work
    operation: Update
    time: "2023-08-11T09:15:01Z"
  - apiVersion: kubedb.com/v1alpha2
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"kubedb.com": {}
      f:spec:
        f:authSecret: {}
    manager: kubedb-provisioner
    operation: Update
    time: "2023-08-11T10:01:12Z"
  - apiVersion: kubedb.com/v1alpha2
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        .: {}
        f:conditions: {}
        f:observedGeneration: {}
        f:phase: {}
    manager: kubedb-provisioner
    operation: Update
    subresource: status
    time: "2023-08-11T10:01:13Z"
  name: mysql-quickstart
  namespace: app2
  ownerReferences:
  - apiVersion: work.open-cluster-management.io/v1
    kind: AppliedManifestWork
    name: 9817658e1634093b51306d2167783ce3fc0b11a58d19dbebe33eff8e94cdd833-db
    uid: f2170e66-e9a4-4109-aae8-1347a9f4ed73
  resourceVersion: "12502"
  uid: 563d7630-0615-4e8e-8c26-9a9a3c7c566a
spec:
  allowedReadReplicas:
    namespaces:
      from: Same
  allowedSchemas:
    namespaces:
      from: Same
  authSecret:
    name: mysql-quickstart-auth
  autoOps: {}
  coordinator:
    resources: {}
  healthChecker:
    failureThreshold: 1
    periodSeconds: 10
    timeoutSeconds: 10
  podTemplate:
    controller: {}
    metadata: {}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mysql-quickstart
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mysqls.kubedb.com
              namespaces:
              - app2
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mysql-quickstart
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mysqls.kubedb.com
              namespaces:
              - app2
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 50
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 1Gi
      serviceAccountName: mysql-quickstart
  replicas: 1
  storage:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: linode-block-storage-retain
  storageType: Durable
  terminationPolicy: Delete
  useAddressType: DNS
  version: 8.0.29
status:
  conditions:
  - lastTransitionTime: "2023-08-11T09:15:02Z"
    message: 'The KubeDB operator has started the provisioning of MySQL: app2/mysql-quickstart'
    reason: DatabaseProvisioningStartedSuccessfully
    status: "True"
    type: ProvisioningStarted
  - lastTransitionTime: "2023-08-11T09:15:33Z"
    message: All desired replicas are ready.
    reason: AllReplicasReady
    status: "True"
    type: ReplicaReady
  - lastTransitionTime: "2023-08-11T10:01:13Z"
    message: database app2/mysql-quickstart is accepting connection
    observedGeneration: 42
    reason: AcceptingConnection
    status: "True"
    type: AcceptingConnection
  - lastTransitionTime: "2023-08-11T10:01:13Z"
    message: database app2/mysql-quickstart is ready
    observedGeneration: 42
    reason: AllReplicasReady
    status: "True"
    type: Ready
  - lastTransitionTime: "2023-08-11T09:16:13Z"
    message: 'The MySQL: app2/mysql-quickstart is successfully provisioned.'
    observedGeneration: 4
    reason: DatabaseSuccessfullyProvisioned
    status: "True"
    type: Provisioned
  observedGeneration: 4
  phase: Ready
