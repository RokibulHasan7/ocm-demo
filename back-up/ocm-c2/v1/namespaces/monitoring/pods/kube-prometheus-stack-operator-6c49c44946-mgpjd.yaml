apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 29b0a9ecc9f283b6cd6794d3eeaea2764064bc6f700e2ce191e9c7901d14ee86
    cni.projectcalico.org/podIP: 10.2.1.8/32
    cni.projectcalico.org/podIPs: 10.2.1.8/32
  creationTimestamp: "2023-08-11T08:42:22Z"
  generateName: kube-prometheus-stack-operator-6c49c44946-
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 48.3.1
    chart: kube-prometheus-stack-48.3.1
    heritage: Helm
    pod-template-hash: 6c49c44946
    release: kube-prometheus-stack
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:chart: {}
          f:heritage: {}
          f:pod-template-hash: {}
          f:release: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"108b3ae4-c6d1-4dae-b6e5-7a734a11c478"}: {}
      f:spec:
        f:containers:
          k:{"name":"kube-prometheus-stack"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10250,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
          f:runAsGroup: {}
          f:runAsNonRoot: {}
          f:runAsUser: {}
          f:seccompProfile:
            .: {}
            f:type: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"tls-secret"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-08-11T08:42:22Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:cni.projectcalico.org/containerID: {}
          f:cni.projectcalico.org/podIP: {}
          f:cni.projectcalico.org/podIPs: {}
    manager: calico
    operation: Update
    subresource: status
    time: "2023-08-11T08:42:23Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.2.1.8"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-08-11T08:42:25Z"
  name: kube-prometheus-stack-operator-6c49c44946-mgpjd
  namespace: monitoring
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kube-prometheus-stack-operator-6c49c44946
    uid: 108b3ae4-c6d1-4dae-b6e5-7a734a11c478
  resourceVersion: "5159"
  uid: 32b1430d-5c66-4fed-902f-b78cb8c61208
spec:
  containers:
  - args:
    - --kubelet-service=kube-system/kube-prometheus-stack-kubelet
    - --localhost=127.0.0.1
    - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.66.0
    - --config-reloader-cpu-request=200m
    - --config-reloader-cpu-limit=200m
    - --config-reloader-memory-request=50Mi
    - --config-reloader-memory-limit=50Mi
    - --thanos-default-base-image=quay.io/thanos/thanos:v0.31.0
    - --secret-field-selector=type!=kubernetes.io/dockercfg,type!=kubernetes.io/service-account-token,type!=helm.sh/release.v1
    - --web.enable-tls=true
    - --web.cert-file=/cert/cert
    - --web.key-file=/cert/key
    - --web.listen-address=:10250
    - --web.tls-min-version=VersionTLS13
    image: quay.io/prometheus-operator/prometheus-operator:v0.66.0
    imagePullPolicy: IfNotPresent
    name: kube-prometheus-stack
    ports:
    - containerPort: 10250
      name: https
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /cert
      name: tls-secret
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-shz5h
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: lke124213-183843-64d5ea8ec8eb
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: kube-prometheus-stack-operator
  serviceAccountName: kube-prometheus-stack-operator
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: tls-secret
    secret:
      defaultMode: 420
      secretName: kube-prometheus-stack-admission
  - name: kube-api-access-shz5h
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:22Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:25Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:25Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:22Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://139259b50d3884506b6af0087f8eda538752f74c30442da0c006ea868223146a
    image: quay.io/prometheus-operator/prometheus-operator:v0.66.0
    imageID: quay.io/prometheus-operator/prometheus-operator@sha256:9c55b6970e37fb734c153e6c6acace285be98d095e8b221f93e38a6b179e1222
    lastState: {}
    name: kube-prometheus-stack
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T08:42:25Z"
  hostIP: 192.168.237.156
  phase: Running
  podIP: 10.2.1.8
  podIPs:
  - ip: 10.2.1.8
  qosClass: BestEffort
  startTime: "2023-08-11T08:42:22Z"
