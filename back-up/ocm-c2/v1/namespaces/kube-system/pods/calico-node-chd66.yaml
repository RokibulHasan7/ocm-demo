apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-08-11T08:02:06Z"
  generateName: calico-node-
  labels:
    controller-revision-hash: 6cfcc49c6b
    k8s-app: calico-node
    pod-template-generation: "1"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:controller-revision-hash: {}
          f:k8s-app: {}
          f:pod-template-generation: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"a258e494-952a-47ff-895b-c9430d4f9e8c"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"calico-node"}:
            .: {}
            f:env:
              .: {}
              k:{"name":"CALICO_DISABLE_FILE_LOGGING"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CALICO_IPV4POOL_CIDR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CALICO_IPV4POOL_IPIP"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CALICO_IPV4POOL_VXLAN"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CALICO_NETWORKING_BACKEND"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"CLUSTER_TYPE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"DATASTORE_TYPE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"FELIX_DEFAULTENDPOINTTOHOSTACTION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"FELIX_HEALTHENABLED"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"FELIX_IPINIPMTU"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"FELIX_IPV6SUPPORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"FELIX_VXLANMTU"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"FELIX_WIREGUARDMTU"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"IP"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IP_AUTODETECTION_METHOD"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"NODENAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"USE_POD_CIDR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WAIT_FOR_DATASTORE"}:
                .: {}
                f:name: {}
                f:value: {}
            f:envFrom: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:preStop:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:livenessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/service/enabled/birdmod/log/run"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/etc/service/enabled/birdmod/run"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
              k:{"mountPath":"/host/etc/cni/net.d"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/lib/modules"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/run/xtables.lock"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/sys/fs/bpf"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
              k:{"mountPath":"/var/lib/calico"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/calico/cni"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/calico"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/run/nodeagent"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:initContainers:
          .: {}
          k:{"name":"flexvol-driver"}:
            .: {}
            f:env:
              .: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/driver"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"install-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CNI_CONF_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_MTU"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"CNI_NETWORK_CONFIG"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"KUBERNETES_NODE_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SLEEP"}:
                .: {}
                f:name: {}
                f:value: {}
            f:envFrom: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/etc/cni/net.d"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"mount-bpffs"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/nodeproc"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/sys/fs/bpf"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
              k:{"mountPath":"/var/run/calico"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
          k:{"name":"upgrade-ipam"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CALICO_NETWORKING_BACKEND"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"KUBERNETES_NODE_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
            f:envFrom: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/cni/networks"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"birdmod-log-run"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
          k:{"name":"birdmod-run"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
          k:{"name":"bpffs"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"cni-bin-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"cni-log-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"cni-net-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"flexvol-driver-host"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-local-net-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"lib-modules"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"nodeproc"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"policysync"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"var-lib-calico"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"var-run-calico"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"xtables-lock"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-08-11T08:02:06Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"192.168.237.30"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-08-11T08:02:57Z"
  name: calico-node-chd66
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: calico-node
    uid: a258e494-952a-47ff-895b-c9430d4f9e8c
  resourceVersion: "793"
  uid: a9f452da-11f7-4c0d-97e8-279ef64305a9
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - lke124213-183843-64d5ea8ea3fc
  containers:
  - env:
    - name: DATASTORE_TYPE
      value: kubernetes
    - name: WAIT_FOR_DATASTORE
      value: "true"
    - name: NODENAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: CALICO_NETWORKING_BACKEND
      valueFrom:
        configMapKeyRef:
          key: calico_backend
          name: calico-config
    - name: CLUSTER_TYPE
      value: k8s,bgp
    - name: IP
      value: autodetect
    - name: IP_AUTODETECTION_METHOD
      value: can-reach=192.168.128.1
    - name: CALICO_IPV4POOL_IPIP
      value: Always
    - name: CALICO_IPV4POOL_VXLAN
      value: Never
    - name: FELIX_IPINIPMTU
      valueFrom:
        configMapKeyRef:
          key: veth_mtu
          name: calico-config
    - name: FELIX_VXLANMTU
      valueFrom:
        configMapKeyRef:
          key: veth_mtu
          name: calico-config
    - name: FELIX_WIREGUARDMTU
      valueFrom:
        configMapKeyRef:
          key: veth_mtu
          name: calico-config
    - name: CALICO_IPV4POOL_CIDR
      value: 10.2.0.0/16
    - name: USE_POD_CIDR
      value: "true"
    - name: CALICO_DISABLE_FILE_LOGGING
      value: "true"
    - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
      value: ACCEPT
    - name: FELIX_IPV6SUPPORT
      value: "false"
    - name: FELIX_HEALTHENABLED
      value: "true"
    - name: KUBERNETES_SERVICE_HOST
      value: dce519b6-f20f-4691-96af-31bf64dab68b.us-southeast-2.linodelke.net
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    envFrom:
    - configMapRef:
        name: kubernetes-services-endpoint
        optional: true
    image: docker.io/calico/node:v3.25.0
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/calico-node
          - -shutdown
    livenessProbe:
      exec:
        command:
        - /bin/calico-node
        - -felix-live
        - -bird-live
      failureThreshold: 6
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    name: calico-node
    readinessProbe:
      exec:
        command:
        - /bin/calico-node
        - -felix-ready
        - -bird-ready
      failureThreshold: 3
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    resources:
      requests:
        cpu: 250m
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /host/etc/cni/net.d
      name: cni-net-dir
    - mountPath: /lib/modules
      name: lib-modules
      readOnly: true
    - mountPath: /run/xtables.lock
      name: xtables-lock
    - mountPath: /var/run/calico
      name: var-run-calico
    - mountPath: /var/lib/calico
      name: var-lib-calico
    - mountPath: /var/run/nodeagent
      name: policysync
    - mountPath: /sys/fs/bpf
      mountPropagation: Bidirectional
      name: bpffs
    - mountPath: /var/log/calico/cni
      name: cni-log-dir
      readOnly: true
    - mountPath: /etc/service/enabled/birdmod/run
      name: birdmod-run
      subPath: run
    - mountPath: /etc/service/enabled/birdmod/log/run
      name: birdmod-log-run
      subPath: run
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6fgwf
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - /opt/cni/bin/calico-ipam
    - -upgrade
    env:
    - name: KUBERNETES_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: CALICO_NETWORKING_BACKEND
      valueFrom:
        configMapKeyRef:
          key: calico_backend
          name: calico-config
    - name: KUBERNETES_SERVICE_HOST
      value: dce519b6-f20f-4691-96af-31bf64dab68b.us-southeast-2.linodelke.net
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    envFrom:
    - configMapRef:
        name: kubernetes-services-endpoint
        optional: true
    image: docker.io/calico/cni:v3.25.0
    imagePullPolicy: IfNotPresent
    name: upgrade-ipam
    resources: {}
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/cni/networks
      name: host-local-net-dir
    - mountPath: /host/opt/cni/bin
      name: cni-bin-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6fgwf
      readOnly: true
  - command:
    - /opt/cni/bin/install
    env:
    - name: CNI_CONF_NAME
      value: 10-calico.conflist
    - name: CNI_NETWORK_CONFIG
      valueFrom:
        configMapKeyRef:
          key: cni_network_config
          name: calico-config
    - name: KUBERNETES_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: CNI_MTU
      valueFrom:
        configMapKeyRef:
          key: veth_mtu
          name: calico-config
    - name: SLEEP
      value: "false"
    - name: KUBERNETES_SERVICE_HOST
      value: dce519b6-f20f-4691-96af-31bf64dab68b.us-southeast-2.linodelke.net
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    envFrom:
    - configMapRef:
        name: kubernetes-services-endpoint
        optional: true
    image: docker.io/calico/cni:v3.25.0
    imagePullPolicy: IfNotPresent
    name: install-cni
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /host/opt/cni/bin
      name: cni-bin-dir
    - mountPath: /host/etc/cni/net.d
      name: cni-net-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6fgwf
      readOnly: true
  - env:
    - name: KUBERNETES_SERVICE_HOST
      value: dce519b6-f20f-4691-96af-31bf64dab68b.us-southeast-2.linodelke.net
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    image: docker.io/calico/pod2daemon-flexvol:v3.25.0
    imagePullPolicy: IfNotPresent
    name: flexvol-driver
    resources: {}
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /host/driver
      name: flexvol-driver-host
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6fgwf
      readOnly: true
  - command:
    - calico-node
    - -init
    - -best-effort
    image: docker.io/calico/node:v3.25.0
    imagePullPolicy: IfNotPresent
    name: mount-bpffs
    resources: {}
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /sys/fs/bpf
      mountPropagation: Bidirectional
      name: bpffs
    - mountPath: /var/run/calico
      mountPropagation: Bidirectional
      name: var-run-calico
    - mountPath: /nodeproc
      name: nodeproc
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6fgwf
      readOnly: true
  nodeName: lke124213-183843-64d5ea8ea3fc
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: calico-node
  serviceAccountName: calico-node
  terminationGracePeriodSeconds: 0
  tolerations:
  - effect: NoSchedule
    operator: Exists
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoExecute
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - hostPath:
      path: /lib/modules
      type: ""
    name: lib-modules
  - hostPath:
      path: /var/run/calico
      type: ""
    name: var-run-calico
  - hostPath:
      path: /var/lib/calico
      type: ""
    name: var-lib-calico
  - hostPath:
      path: /run/xtables.lock
      type: FileOrCreate
    name: xtables-lock
  - hostPath:
      path: /sys/fs/bpf
      type: DirectoryOrCreate
    name: bpffs
  - hostPath:
      path: /proc
      type: ""
    name: nodeproc
  - hostPath:
      path: /opt/cni/bin
      type: ""
    name: cni-bin-dir
  - hostPath:
      path: /etc/cni/net.d
      type: ""
    name: cni-net-dir
  - hostPath:
      path: /var/log/calico/cni
      type: ""
    name: cni-log-dir
  - hostPath:
      path: /var/lib/cni/networks
      type: ""
    name: host-local-net-dir
  - hostPath:
      path: /var/run/nodeagent
      type: DirectoryOrCreate
    name: policysync
  - hostPath:
      path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds
      type: DirectoryOrCreate
    name: flexvol-driver-host
  - configMap:
      defaultMode: 493
      items:
      - key: birdmod-run
        path: run
      name: calico-birdmod
    name: birdmod-run
  - configMap:
      defaultMode: 493
      items:
      - key: log-run
        path: run
      name: calico-birdmod
    name: birdmod-log-run
  - name: kube-api-access-6fgwf
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:02:50Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:02:57Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:02:57Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:02:06Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://12b41adcb2c48106ca6f1e25bebe3fc353bbbaf91f5beb4464413c3106a47446
    image: docker.io/calico/node:v3.25.0
    imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
    lastState: {}
    name: calico-node
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T08:02:50Z"
  hostIP: 192.168.237.30
  initContainerStatuses:
  - containerID: containerd://7e0fa4011756444e17e0fa967ec0a418a1b11fa1ee7d9ea5046d004e3942d1be
    image: docker.io/calico/cni:v3.25.0
    imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
    lastState: {}
    name: upgrade-ipam
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://7e0fa4011756444e17e0fa967ec0a418a1b11fa1ee7d9ea5046d004e3942d1be
        exitCode: 0
        finishedAt: "2023-08-11T08:02:24Z"
        reason: Completed
        startedAt: "2023-08-11T08:02:24Z"
  - containerID: containerd://7bcc520dd1e6c176264104951fccf8717017b7c109aea2a24b39fe92a48362a0
    image: docker.io/calico/cni:v3.25.0
    imageID: docker.io/calico/cni@sha256:a38d53cb8688944eafede2f0eadc478b1b403cefeff7953da57fe9cd2d65e977
    lastState: {}
    name: install-cni
    ready: true
    restartCount: 2
    state:
      terminated:
        containerID: containerd://7bcc520dd1e6c176264104951fccf8717017b7c109aea2a24b39fe92a48362a0
        exitCode: 0
        finishedAt: "2023-08-11T08:02:42Z"
        reason: Completed
        startedAt: "2023-08-11T08:02:42Z"
  - containerID: containerd://83a07971cf1de910e40e6e4ce6ae60c0ad7b30963c575290081d8dd0469152f2
    image: docker.io/calico/pod2daemon-flexvol:v3.25.0
    imageID: docker.io/calico/pod2daemon-flexvol@sha256:01ddd57d428787b3ac689daa685660defe4bd7810069544bd43a9103a7b0a789
    lastState: {}
    name: flexvol-driver
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://83a07971cf1de910e40e6e4ce6ae60c0ad7b30963c575290081d8dd0469152f2
        exitCode: 0
        finishedAt: "2023-08-11T08:02:44Z"
        reason: Completed
        startedAt: "2023-08-11T08:02:44Z"
  - containerID: containerd://c813108102481d8fa800b92b5c39c0c49ee43d7d66e1cbe3892c05f1a817ce12
    image: docker.io/calico/node:v3.25.0
    imageID: docker.io/calico/node@sha256:a85123d1882832af6c45b5e289c6bb99820646cb7d4f6006f98095168808b1e6
    lastState: {}
    name: mount-bpffs
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://c813108102481d8fa800b92b5c39c0c49ee43d7d66e1cbe3892c05f1a817ce12
        exitCode: 0
        finishedAt: "2023-08-11T08:02:49Z"
        reason: Completed
        startedAt: "2023-08-11T08:02:49Z"
  phase: Running
  podIP: 192.168.237.30
  podIPs:
  - ip: 192.168.237.30
  qosClass: Burstable
  startTime: "2023-08-11T08:02:09Z"
