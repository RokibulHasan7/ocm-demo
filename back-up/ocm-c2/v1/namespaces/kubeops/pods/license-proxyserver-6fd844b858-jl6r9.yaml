apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/apiregistration.yaml: 09edce32ca26b406211305140ca21b82e5b53849a29e34347bed2344e773458d
    cni.projectcalico.org/containerID: bdac68a28d4c893cb38a2f4309dd5c6e95cc0917e4748816861e950422071104
    cni.projectcalico.org/podIP: 10.2.1.5/32
    cni.projectcalico.org/podIPs: 10.2.1.5/32
  creationTimestamp: "2023-08-11T08:41:57Z"
  generateName: license-proxyserver-6fd844b858-
  labels:
    app.kubernetes.io/instance: license-proxyserver
    app.kubernetes.io/name: license-proxyserver
    pod-template-hash: 6fd844b858
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:checksum/apiregistration.yaml: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"e299118c-80ad-449f-8190-178e483930d4"}: {}
      f:spec:
        f:containers:
          k:{"name":"server"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"PLATFORM_API_TOKEN"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8081,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:protocol: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:protocol: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/var/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-08-11T08:41:57Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:cni.projectcalico.org/containerID: {}
          f:cni.projectcalico.org/podIP: {}
          f:cni.projectcalico.org/podIPs: {}
    manager: calico
    operation: Update
    subresource: status
    time: "2023-08-11T08:41:58Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.2.1.5"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-08-11T08:42:01Z"
  name: license-proxyserver-6fd844b858-jl6r9
  namespace: kubeops
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: license-proxyserver-6fd844b858
    uid: e299118c-80ad-449f-8190-178e483930d4
  resourceVersion: "4321"
  uid: 1d69c159-ddf9-45f2-a1c3-7321207164cc
spec:
  containers:
  - args:
    - run
    - --v=3
    - --secure-port=8443
    - --audit-log-path=-
    - --tls-cert-file=/var/serving-cert/tls.crt
    - --tls-private-key-file=/var/serving-cert/tls.key
    - --use-kubeapiserver-fqdn-for-aks=true
    - --baseURL=https://api.byte.builders/
    - --token=$(PLATFORM_API_TOKEN)
    env:
    - name: PLATFORM_API_TOKEN
      valueFrom:
        secretKeyRef:
          key: token
          name: license-proxyserver-token
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: ghcr.io/appscode/license-proxyserver:v0.0.4
    imagePullPolicy: IfNotPresent
    name: server
    ports:
    - containerPort: 8443
      protocol: TCP
    - containerPort: 8081
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/serving-cert
      name: serving-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-dkd8m
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: lke124213-183843-64d5ea8ec8eb
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 65535
  serviceAccount: license-proxyserver
  serviceAccountName: license-proxyserver
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: serving-cert
    secret:
      defaultMode: 420
      secretName: license-proxyserver-apiserver-cert
  - name: kube-api-access-dkd8m
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:41:58Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:01Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:01Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:41:57Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://5a222a2a0ec39799289c6bf7570a1ac81585f478f0c5a68d4ede19586fccc5e2
    image: ghcr.io/appscode/license-proxyserver:v0.0.4
    imageID: ghcr.io/appscode/license-proxyserver@sha256:cd0150ace37549713d773b61fd5090f6e254a24b272735d82609a5df9ae787f2
    lastState: {}
    name: server
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T08:42:00Z"
  hostIP: 192.168.237.156
  phase: Running
  podIP: 10.2.1.5
  podIPs:
  - ip: 10.2.1.5
  qosClass: BestEffort
  startTime: "2023-08-11T08:41:58Z"
