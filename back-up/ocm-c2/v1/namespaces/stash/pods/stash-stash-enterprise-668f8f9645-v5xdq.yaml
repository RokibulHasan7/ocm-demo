apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/apiregistration.yaml: 8927681e55b54373a1281d23cef432a679c31741ddea50e0a11bdbffe6c00064
    cni.projectcalico.org/containerID: 64580be34b4cf41bc77da2e32ce376bfd9383fb187d9f572d94b0bb9cc4f4f85
    cni.projectcalico.org/podIP: 10.2.1.10/32
    cni.projectcalico.org/podIPs: 10.2.1.10/32
  creationTimestamp: "2023-08-11T08:42:25Z"
  generateName: stash-stash-enterprise-668f8f9645-
  labels:
    app.kubernetes.io/instance: stash
    app.kubernetes.io/name: stash-enterprise
    pod-template-hash: 668f8f9645
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:checksum/apiregistration.yaml: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"7cc5e703-53f8-4328-bf86-aea118d956aa"}: {}
      f:spec:
        f:containers:
          k:{"name":"operator"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"pushgateway"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":56789,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:protocol: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/tmp"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/pv"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"data-volume"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"stash-scratchdir"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-08-11T08:42:25Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:cni.projectcalico.org/containerID: {}
          f:cni.projectcalico.org/podIP: {}
          f:cni.projectcalico.org/podIPs: {}
    manager: calico
    operation: Update
    subresource: status
    time: "2023-08-11T08:42:28Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.2.1.10"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-08-11T08:42:33Z"
  name: stash-stash-enterprise-668f8f9645-v5xdq
  namespace: stash
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: stash-stash-enterprise-668f8f9645
    uid: 7cc5e703-53f8-4328-bf86-aea118d956aa
  resourceVersion: "5512"
  uid: 813b8bc6-5143-47af-98cf-11b1cb21c60b
spec:
  containers:
  - args:
    - run
    - --v=3
    - --docker-registry=ghcr.io/stashed
    - --image=stash-enterprise
    - --image-tag=v0.30.1
    - --secure-port=8443
    - --authentication-configmap-namespace=kube-system
    - --audit-log-path=-
    - --tls-cert-file=/var/serving-cert/tls.crt
    - --tls-private-key-file=/var/serving-cert/tls.key
    - --pushgateway-url=http://stash-stash-enterprise.stash.svc:56789
    - --enable-mutating-webhook=true
    - --enable-validating-webhook=true
    - --bypass-validating-webhook-xray=false
    - --use-kubeapiserver-fqdn-for-aks=true
    - --nva-cpu=100m
    - --nva-memory=128Mi
    - --nva-user=2000
    - --nva-privileged-mode=false
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: ghcr.io/stashed/stash-enterprise:v0.30.1
    imagePullPolicy: IfNotPresent
    name: operator
    ports:
    - containerPort: 8443
      protocol: TCP
    resources:
      requests:
        cpu: 100m
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/serving-cert
      name: serving-cert
    - mountPath: /tmp
      name: stash-scratchdir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8kczz
      readOnly: true
  - args:
    - --web.listen-address=:56789
    - --persistence.file=/var/pv/pushgateway.dat
    image: prom/pushgateway:v1.4.2
    imagePullPolicy: IfNotPresent
    name: pushgateway
    ports:
    - containerPort: 56789
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/pv
      name: data-volume
    - mountPath: /tmp
      name: stash-scratchdir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8kczz
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: lke124213-183843-64d5ea8ec8eb
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 65535
  serviceAccount: stash-stash-enterprise
  serviceAccountName: stash-stash-enterprise
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: data-volume
  - emptyDir: {}
    name: stash-scratchdir
  - name: serving-cert
    secret:
      defaultMode: 420
      secretName: stash-stash-enterprise-apiserver-cert
  - name: kube-api-access-8kczz
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:25Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:33Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:33Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-08-11T08:42:25Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://dff2795143c4a74bd9e6a1fc8ee7f08f67373ef4720a1a156c03333ee9514041
    image: ghcr.io/stashed/stash-enterprise:v0.30.1
    imageID: ghcr.io/stashed/stash-enterprise@sha256:0b3de294c0747252d307252d27480af60819c0dc9f1be11446432df06a6d99f0
    lastState: {}
    name: operator
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T08:42:31Z"
  - containerID: containerd://0b35dec0e913af6f348e994e508857a84b446eb8a59185a7f714ef75a578d0d5
    image: docker.io/prom/pushgateway:v1.4.2
    imageID: docker.io/prom/pushgateway@sha256:a684e7c830a4b19e564a93bfc3bf713e85b04ab9dfcab5633c14cbba241f9231
    lastState: {}
    name: pushgateway
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-08-11T08:42:32Z"
  hostIP: 192.168.237.156
  phase: Running
  podIP: 10.2.1.10
  podIPs:
  - ip: 10.2.1.10
  qosClass: Burstable
  startTime: "2023-08-11T08:42:25Z"
