apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.open-cluster-management.io/version: 0.11.0
  creationTimestamp: "2023-08-11T08:19:38Z"
  generation: 2
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:shortNames: {}
          f:singular: {}
        f:conditions:
          k:{"type":"Established"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"NamesAccepted"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-apiserver
    operation: Update
    subresource: status
    time: "2023-08-11T08:19:38Z"
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:operator.open-cluster-management.io/version: {}
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
          f:webhook:
            .: {}
            f:clientConfig:
              .: {}
              f:caBundle: {}
              f:service:
                .: {}
                f:name: {}
                f:namespace: {}
                f:path: {}
                f:port: {}
            f:conversionReviewVersions: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:shortNames: {}
          f:singular: {}
        f:scope: {}
        f:versions: {}
    manager: registration-operator
    operation: Update
    time: "2023-08-11T08:19:43Z"
  name: managedclustersets.cluster.open-cluster-management.io
  resourceVersion: "2237"
  uid: 5051471c-8c16-447a-b91a-48004ea9dc08
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQekNDQWllZ0F3SUJBZ0lJQUp5VlRXNmNwbEl3RFFZSktvWklodmNOQVFFTEJRQXdMVEVyTUNrR0ExVUUKQXd3aVkyeDFjM1JsY2kxdFlXNWhaMlZ5TFhkbFltaHZiMnRBTVRZNU1UYzBNVGs0TWpBZUZ3MHlNekE0TVRFdwpPREU1TkRGYUZ3MHlOREE0TVRBd09ERTVOREphTUMweEt6QXBCZ05WQkFNTUltTnNkWE4wWlhJdGJXRnVZV2RsCmNpMTNaV0pvYjI5clFERTJPVEUzTkRFNU9ESXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzJZdkZzcGw3N2tqNnUzV2FBV3V2RWJ0azUvNFVKQ3h6SUU3Nm1CZXRLQUZTbXBqbkRRdGR0N3Z4Zgo1TWhhK1BCd0NnSStMTXQzTlY1OGs1S3pOcVAydFFYZGc5MU9QZkVyWXk5THhLRU5OWUJ3TGRiam1zeDNxSGg5Ckc5bTR1RDJKcEhQU0ZBa1lUQVcyR1BxRlNzcFJ6RGN4SUFnTERJVlh4WWRGQnMwbG1HV013NGcwOHJubWRNRzMKVnRtWjQxQ2Fkbnk1bzlWV3lIbXZyY2JjV3cxOXZ4azlFNDVFbzFnRTdYcUY1N29DM0tySEVySC9JRHBpSVhMQwo0aGduRjdsdmpMczhaRkc3WkZZWVoxUlNNMmQ2aVZodW9JNEFWV0ZIdTRYTWM4VHp6STdDSHhVK1pFOTZtVlNKCk9ldll3Q3JqNFhSSHNiK3pjMUtnVTJMMVJBcmpBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRTdlQ2dDFaK0RwRlpwZUlJcTFZYUhDeExtV3pBZgpCZ05WSFNNRUdEQVdnQlRTdlQ2dDFaK0RwRlpwZUlJcTFZYUhDeExtV3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DCkFRRUFFRi9oVUYzeVJHc2cvS25GR3RaRzV3MlVNQmt3c082WlFmcUt4dE1XamZwamI5MGQwTDRvWXJvdnpmWmgKYXNTYllNdDZyQkhOMG9MRjN4YmxFbm5sNitWM2VzdUhOcGU3b3E1azh5c0V6Wld5MEsvZUhSanI4N1F0Q1I3dwptRXA1U2dzRVJnQzRBbmhzVWVod2dnaE04WXM1NXAxSzE2MTJseitITlNFTjI0RzVPOGt4TUt3UzVka3IrK0taCjM4UWVRbUk0akF2YmR1VnNSQWg2MThiRzhKVDJMTFErSVJEbXp5OUEzZ3hGelBTMmxkK29NeEhSUGdacVRabHkKOUlSUWYyRFRSUnZrbzhNSTVTNWFBUFpBZGE3VzR5RjFjcUk4YUliOHFleEhldmY2YUtOOUgvdXFIN01sVG5BNQpNSVkvUDdySEIxQnQxN2FTNWxKbnE0RG1zZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: cluster-manager-registration-webhook
          namespace: open-cluster-management-hub
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1beta1
      - v1beta2
  group: cluster.open-cluster-management.io
  names:
    kind: ManagedClusterSet
    listKind: ManagedClusterSetList
    plural: managedclustersets
    shortNames:
    - mclset
    - mclsets
    singular: managedclusterset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="ClusterSetEmpty")].status
      name: Empty
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: cluster.open-cluster-management.io/v1beta1 ManagedClusterSet
      is deprecated; use cluster.open-cluster-management.io/v1beta2 ManagedClusterSet
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: "ManagedClusterSet defines a group of ManagedClusters that user's
          workload can run on. A workload can be defined to deployed on a ManagedClusterSet,
          which mean: 1. The workload can run on any ManagedCluster in the ManagedClusterSet
          2. The workload cannot run on any ManagedCluster outside the ManagedClusterSet
          3. The service exposed by the workload can be shared in any ManagedCluster
          in the ManagedClusterSet \n In order to assign a ManagedCluster to a certian
          ManagedClusterSet, add a label with name `cluster.open-cluster-management.io/clusterset`
          on the ManagedCluster to refers to the ManagedClusterSet. User is not allow
          to add/remove this label on a ManagedCluster unless they have a RBAC rule
          to CREATE on a virtual subresource of managedclustersets/join. In order
          to update this label, user must have the permission on both the old and
          new ManagedClusterSet."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            default:
              clusterSelector:
                selectorType: LegacyClusterSetLabel
            description: Spec defines the attributes of the ManagedClusterSet
            properties:
              clusterSelector:
                default:
                  selectorType: LegacyClusterSetLabel
                description: ClusterSelector represents a selector of ManagedClusters
                properties:
                  labelSelector:
                    description: LabelSelector define the general labelSelector which
                      clusterset will use to select target managedClusters
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  selectorType:
                    default: LegacyClusterSetLabel
                    description: SelectorType could only be "LegacyClusterSetLabel"
                      or "LabelSelector" "LegacyClusterSetLabel" means to use label
                      "cluster.open-cluster-management.io/clusterset:<ManagedClusterSet
                      Name>"" to select target clusters. "LabelSelector" means use
                      labelSelector to select target managedClusters
                    enum:
                    - LegacyClusterSetLabel
                    - LabelSelector
                    type: string
                type: object
            type: object
          status:
            description: Status represents the current status of the ManagedClusterSet
            properties:
              conditions:
                description: Conditions contains the different condition statuses
                  for this ManagedClusterSet.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="ClusterSetEmpty")].status
      name: Empty
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: "ManagedClusterSet defines a group of ManagedClusters that user's
          workload can run on. A workload can be defined to deployed on a ManagedClusterSet,
          which mean: 1. The workload can run on any ManagedCluster in the ManagedClusterSet
          2. The workload cannot run on any ManagedCluster outside the ManagedClusterSet
          3. The service exposed by the workload can be shared in any ManagedCluster
          in the ManagedClusterSet \n In order to assign a ManagedCluster to a certian
          ManagedClusterSet, add a label with name `cluster.open-cluster-management.io/clusterset`
          on the ManagedCluster to refers to the ManagedClusterSet. User is not allow
          to add/remove this label on a ManagedCluster unless they have a RBAC rule
          to CREATE on a virtual subresource of managedclustersets/join. In order
          to update this label, user must have the permission on both the old and
          new ManagedClusterSet."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            default:
              clusterSelector:
                selectorType: ExclusiveClusterSetLabel
            description: Spec defines the attributes of the ManagedClusterSet
            properties:
              clusterSelector:
                default:
                  selectorType: ExclusiveClusterSetLabel
                description: ClusterSelector represents a selector of ManagedClusters
                properties:
                  labelSelector:
                    description: LabelSelector define the general labelSelector which
                      clusterset will use to select target managedClusters
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  selectorType:
                    default: ExclusiveClusterSetLabel
                    description: SelectorType could only be "ExclusiveClusterSetLabel"
                      or "LabelSelector" "ExclusiveClusterSetLabel" means to use label
                      "cluster.open-cluster-management.io/clusterset:<ManagedClusterSet
                      Name>"" to select target clusters. "LabelSelector" means use
                      labelSelector to select target managedClusters
                    enum:
                    - ExclusiveClusterSetLabel
                    - LabelSelector
                    type: string
                type: object
            type: object
          status:
            description: Status represents the current status of the ManagedClusterSet
            properties:
              conditions:
                description: Conditions contains the different condition statuses
                  for this ManagedClusterSet.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ManagedClusterSet
    listKind: ManagedClusterSetList
    plural: managedclustersets
    shortNames:
    - mclset
    - mclsets
    singular: managedclusterset
  conditions:
  - lastTransitionTime: "2023-08-11T08:19:38Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2023-08-11T08:19:38Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta2
